group 'harry-java'
version '1.2.0'

buildscript {
    ext {
        springBootVersion = "${springBootVersion}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}") {
        exclude module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-mustache:${springBootVersion}") {
        exclude module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-jdbc") {
        exclude module: "spring-boot-starter-logging"
    }

    compile("org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion")
    compile 'org.slf4j:slf4j-parent:1.7.22'
    compile 'com.github.Hazz223:docker-secrets:1.0.0'
    compile 'com.zaxxer:HikariCP:2.4.1'

    runtime('mysql:mysql-connector-java')

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

build.mustRunAfter clean

task createDockerFolder(type: Copy, group: "docker", dependsOn: ["clean", "build"]) {

    from "src/main/deploy"
    from("src/main/resources/") {
        include "application.properties"
        include "log4j2.xml"
    }

    from("build/libs") {
        include "*.jar"
        rename { file ->
            file = "app.jar"
        }
    }

    into 'build/docker/'
}

task createImage(type: Exec, group: "docker", dependsOn: 'createDockerFolder') {

    workingDir "build/docker"

    commandLine 'docker', 'build', '-t', "hazz22/blog-api:${project.version}.${new Date().time}", "."
}